c(z, 555, z)
z * 2 +100
my_sqrt <- sqrt(z -1)
my_sqrt
my_div <- z / my_sqrt
my_div
c(1, 2, 3, 4) + c(0, 10)
c(1, 2, 3, 4) + c(0, 10, 100)
z * 2 +1000
my_div
getwd()
ls()
x <- 9
ls()
list.files()
?list.files
args(list.files)
old.dir <- getwd()
dir.create("testdir")
setwd("testdir/")
file.create("mytest.R")
ls()
list.files()
file.exists("mytest.R")
file.info("mytest.R")
file.rename("mytest.R", "mytest2.R")
file.copy("mytest2.R", "mytest3.R")
file.path("mytest3.R")
file.path("folder1", "folder2")
?dir.create
dir.create(file.path("testdir2", "testdir3"), recursive = TRUE)
setwd(old.dir)
unlink("testdir", recursive = TRUE)
1:20
pi:10
15:1
?":"
seq(1,20)
seq(0,10,by=0.5)
my_seq = seq(5,10,length=30)
my_seq <- seq(5,10,length=30)
length(my_seq)
1:length(my_seq)
seq(along.with=my_seq)
seq.along(my_seq)
seq_along(my_seq)
rep(0, times=40)
rep(c(0, 1, 2), times=10)
rep(c(0, 1, 2), each = 10)
num_vect <- c(0.5, 55, -10, 6)
tf <- num_vect < 1
tf
num_vect >= 6
my_char <- c("My", "name", "is")
my_char
paste(my_char, collapse = " ")
my_name <- c(my_char, "Chocka")
my_name
paste(my_name, collapse = " ")
paste("Hello", "world!", sep = " ")
paste(1:3, c("X", "Y", "Z"), sep = "")
paste(LETTERS, 1:4, sep = "-")
bye()
exit
rbinom(1,1,0.5)
rbinom(1,1,0.5)
rbinom(1,1,0.5)
rbinom(1,1,0.5)
rbinom(1,1,0.5)
rbinom(1,1,0.5)
rbinom(1,1,0.5)
rbinom(1,1,0.5)
rbinom(1,1,0.5)
rbinom(1,1,0.5)
rbinom(2,1,0.5)
rbinom(1,2,0.5)
rbinom(1,2,0.5)
rbinom(1,2,0.5)
rbinom(1,2,0.5)
rbinom(1,2,0.5)
rbinom(1,2,0.5)
rbinom(1,2,0.5)
rbinom(1,2,0.5)
rbinom(1,2,0.5)
rbinom(1,2,0.5)
rbinom(1,2,0.5)
rbinom(1,2,0.5)
x
x <- c(0, 2, 18, 4, 12, 10)
x
x > 10
x[x>10]
formals(na.rm)
formals(sqrt)
formals(file.create)
formalArgs(file.create)
formals(read.csv)
getwd()
f(2)
load("lazyeval.R")
f <- function(a, b){
a^2
}
f(2)
f(2, 4)
search()
f(2,3,4)
f(3)
f(3,1)
sqrt <- function(x) {}
sqrt <- function(x) { x^3 }
sqrt(3)
clear
clear()
View(sqrt)
sqrt <- function(x) { x^2 }
sqrt(3)
y <- 10
f <- function(x) { y <- 2; y^2 + g(x)}
g <- function(x) { x*y }
f(3)
library(swirl)
ls()
rm(list=ls())
swirl()
num_vect <- c(0.5, 55, -10, 6)
tf <- num_vect < 1
tf
num_vect >= 6
my_char <- c("My", "name", "is")
my_char
paste(my_char, collapse = " ")
my_name <- c(my_char, "Chocka")
my_name
paste(my_name, collapse = " ")
paste("Hello", "world!", sep = " ")
paste("Hello", "world!", sep = " ")
paste(1:3, c("X", "Y", "Z"), sep = "")
paste(LETTERS, 1:4, sep = "-")
swirl()
x <- c(44, NA, 5, NA)
x * 3
y <- rnorm(1000)
z <- rep(NA, 1000)
my_data <- sample(c(y, z), 100)
my_na <- is.na(my_data)
my_na
my_data == NA
sum(my_na)
my_data
0 / 0
Inf - Inf
x
x[1:10]
x[is.na(x)]
y <- x[!is.na(x)]
y
y[y>0]
x[x>0]
x[!is.na(x) & x > 0]
x[c(3,5,7)]
x[0]
x[3000]
x[c(-2, -10)]
x[-c(2,10)]
vect <- c(foo = 11, bar = 2, norf = NA)
vect
names(vect)
vect2 <- c(11,2,NA)
names(vect2) <- c("foo", "bar", "norf")
identical(vect, vect2)
vect["bar"]
vect[c("foo", "bar")]
my_vector <- 1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector) <- c(4,5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix <- my_vector
?matrix
my_matrix2 <- matrix(1:20, 4, 5)
identical(my_matrix, my_matrix2)
pateints <- c("Bill", "Gina", "Kelly", "Sean")
patients <- c("Bill", "Gina", "Kelly", "Sean")
cbind(patients, my_matrix)
my_data <-
| data.frame(patients, my_matrix)
my_data <- data.frame(patients, my_matrix)
my_data
class(my_data)
cnames <- c("patient", "age", "weight", "bp", "rating", "test")
colnames(my_data) <- cnames
my_data
TRUE == TRUE
(FALSE == TRUE) == FALSE
6 == 7
6 < 7
10 <= 10
5 != 7
5!=7
!(5==7)
FALSE & FALSE
TRUE & c(TRUE, FALSE, FALSE)
TRUE && c(TRUE, FALSE, FALSE)
TRUE | c(TRUE, FALSE, FALSE)
TRUE || c(TRUE, FALSE, FALSE)
5 > 8 || 6 != 8 && 4 > 3.9
isTRUE(6>4)
identical('Twins', 'Twins')
identical('twins', 'twins')
xor(5 == 6, !FALSE)
ints <- sample(10)
ints
ints > 5
which(ints > 7)
any(ints < 0)
all(ints > 0)
Sys.Date()
mean(c(2,4,5))
submit()
boring_function('My first function!')
boring_function
submit()
my_mean(c(4,5,10))
submit()
remainder(5)
remainder(11,5)
remainder(divisor = 11, num = 5)
remainder(4, div = 2)
args(remainder)
submit()
evaluate(sd, c(1.4, 3.6, 7.9, 8.8))
evaluate(function(x){x+1}, 6)
evaluate(function(x){dat[1]}, c(8,4,0))
evaluate(function(x){x[1]}, c(8,4,0))
evaluate(function(x){x[3]}, c(8,4,0))
evaluate(function(x){x[length(x)]}, c(8,4,0))
?paste
paste("Programming", "is", "fun!")
submit()
telegram("Emergency", "message", "for", "you")
submit()
mad_libs(place = "Erode", name = "Chocka", adjective = "super")
submit()
"I" %p% "love" %p% "R!"
d1 <- Sys.Date()
class(d1)
unclass(d1)
d1
d2 <- as.Date("1969-01-01")
unclass(d2)
t1 <- Sys.time()
t1
class(t1)
unclass(t1)
t2 <- as.POSIXlt(Sys.time())
class(t2)
t2
unclass(t2)
str(unclass(t2))
t2$min
weekdays(d1)
months(t1)
quarters(t2)
t3 <- "October 17, 1986 08:24"
t4 <- strptime(t3, "%B %d, %Y %H:%M")
t4
class(t4)
Sys.time() > t1
Sys.time() - t1
difftime(Sys.time(), t1, units = 'days')
cube <- function(x, n) {
x^3
}
cube(3)
x <- 1:10
if(x > 5) {
x <- 0
}
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z <- 10
f(3)
x <- 5
y <- if(x < 3) {
NA
} else {
10
}
y
getwd
getwd()
dirname()
dirname("specdata")
dirname("Week2")
dirname(Week2)
dirname(Week1)
dirname("Week1")
dir.exists("Week1")
getwd()
dir.exists("858")
dirname("858")
dirname("win-library")
dirname("Documents")
dirname("Desktop")
getwd()
setwd("858")
setwd("Documents")
setwd("../Documents")
setwd("../")
getwd()
setwd("../../../../D:/mooc")
setwd("F:/mooc/R_Programming_Coursera/Week2/specdata/")
list.files()
da <- read.csv("307.csv")
da
head(da)
rm(da)
da <- read.csv("307.csv", header = TRUE)
head(da, 3)
da$sulfate
da$sulfate[!is.na(da$sulfate)]
i <- 3
fn <- cat(i, ".csv")
fn <- cat(i, ".csv", sep = "")
class(fn)
fn1 <- "Hi"
class(fn1)
class("fn")
sprintf("%03d.csv", i)
fn <- sprintf("%03d.csv", i)
class(fn)
i <- 389
fn <- sprintf("%03d.csv", i)
fn
da
pollu <- sulfate
pollu <- 'sulfate'
da$pollu
da$'sulfate'
pollu
da$"sulfate"
da[[pollu]]
da[[pollu]][!is.na(da[[pollu]])]
getwd()
setwd("../")
rm(list = ls())
source("pollu_test.R")
pollutantmean("specdata", "sulfate", 1:10)
source("pollu_test.R")
pollutantmean("specdata", "sulfate", 1:10)
setwd("../")
source("pollu_test.R")
pollutantmean("specdata", "sulfate", 1:10)
x <- c(1, 2, 3.0, NA, 4, 5, NA)
x
sum(!is.na(x))
setwd("../")
source("pollu_test.R")
pollutantmean("specdata", "sulfate", 1:10)
x <- c(1, 2, 3.0, NA, 4, 5, NA)
sum(x, na.rm = TREU)
sum(x, na.rm = TRUE)
rm(list = ls())
setwd("../")
source("pollu_test.R")
pollutantmean("specdata", "sulfate", 1:10)
rm(list = ls())
setwd("../")
source("pollu_test.R")
pollutantmean("specdata", "sulfate", 1:10)
rm(list = ls())
setwd("../")
source("pollu_test.R")
pollutantmean("specdata", "sulfate", 1:10)
rm(list = ls())
setwd("../")
source("pollu_test.R")
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "nitrate", 70:72)
getwd()
rm(list = ls())
setwd("../")
source("pollu_test.R")
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "sulfate", 1:10)
rm(list = ls())
source("pollu_test.R")
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "nitrate", 70:72)
pollutantmean("specdata", "nitrate", 23)
(d <- data.frame(x = 1, y = 1:10, fac = sample(LETTERS[1:3], 10, replace = TRUE)))
x <- c(1, NA, 3, 4, NA, 6)
y <- c(NA, 2, 3, 4, NA, 6)
dat <- data.frame(x, y)
dat
ok <- complete.cases(x, y)
ok
sum(ok)
y <- c(NA, 2, 3, NA, NA, 6)
dat <- data.frame(x, y)
ok <- complete.cases(x, y)
sum(ok)
rm(x)
rm(y)
dat
ok <- complete.cases(x, y)
ok <- complete.cases(dat$x, dat$y)
sum(ok)
complete.cases(dat)
d
da <- data.frame()
for (i in 1:3) { da <- da + data.frame(i, i+1)}
for (i in 1:3) { da <- da + data.frame(i, i)}
a <- c()
b <- c()
for (i in 1:3) {a <- a + c(i); b <- b + c(i)}
a
append(1:5, 0:1, after = 3)
y <- numeric()
for (i in 1:3) { z <- append(y, i)}
z
y
for (i in 1:3) { y <- append(y, i)}
y
source("compl_test.R")
complete("specdata", 1)
complete("specdata", 1)
source("compl_test.R")
complete("specdata", 1)
complete("specdata", 1:5)
complete("specdata", c(2, 4, 8, 10, 12))
complete("specdata", 3)
rm(list = ls())
source("corr_test.R")
head(corr("specdata", 150))
source("corr_test.R")
head(corr("specdata", 150))
da <- read.csv("001.csv", header = TRUE)
da <- read.csv("specdata/001.csv", header = TRUE)
da1 <- complete.cases(da)
da1
head(da1)
da1
da
da1 <- da[complete.cases(da)]
da1 <- da[[complete.cases(da)]]
da
complete.cases(da)
da[complete.cases(da)]
da$sulfate[complete.cases(da)]
da$nitrate[complete.cases(da)]
rm(list = ls())
source("corr_test.R")
head(corr("specdata", 150))
rm(list = ls())
source("corr_test.R")
head(corr("specdata", 150))
summary(cr)
cr <- corr("specdata", 150)
head(cr)
summary(cr)
cr <- corr("specdata", 5000)
cr
summary()
summary(cr)
length(cr)
cr <- corr("specdata")
summary(cr)
rm(list = ls())
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "nitrate", 70:72)
pollutantmean("specdata", "sulfate", 34)
pollutantmean("specdata", "nitrate")
source("complete.R")
cc <- complete("specdata", c(6, 10, 20, 34, 100, 200, 310))
print(cc$nobs)
cc <- complete("specdata", 54)
print(cc$nobs)
set.seed(42)
cc <- complete("specdata", 332:1)
use <- sample(332, 10)
print(cc[use, "nobs"])
source("corr.R")
cr <- corr("specdata")
cr <- sort(cr)
set.seed(868)
out <- round(cr[sample(length(cr), 5)], 4)
print(out)
cr <- corr("specdata", 129)
cr <- sort(cr)
n <- length(cr)
set.seed(197)
out <- c(n, round(cr[sample(n, 5)], 4))
print(out)
cr <- corr("specdata", 2000)
n <- length(cr)
cr <- corr("specdata", 1000)
cr <- sort(cr)
print(c(n, round(cr, 4)))
sample(332, 10)
sample(332, 10)
